0.1     - First draft version of TagGD demultiplexer.
0.1.1   - Some stuffed moved around, added unit test.
0.1.2   - Moved more stuff around.
0.1.3   - Fixed parallelization error.
0.1.4   - Fixed parallelization error (for real I hope).
0.1.5   - Corrected algorithmic bug causing some matches to be discarded.
          Added chunking.
0.1.6   - Big rewrite, fixed output issues, now also a bit quicker.
0.1.7   - Added wall time.
0.1.8   - Removed flushing operations when writing to disk
0.1.9   - Cleanups.
0.1.10  - Multiprocessing in chunks.
0.1.11  - Added homopolymer filter. Fixed no-mp bug.
0.1.12  - Changed homopolymer default. Readded parallel writing.
0.1.13  - Added cores parameter, changed reading loops, improved job collection.
0.2.0   - Big rewrite of the whole multiprocessing approach.
0.2.1   - Small improvements, comments added.
0.2.2   - Readded % stats.
0.2.3   - Fixed a bug that produced wrong output in the output files
          *_unmatched.*, *_matched.* and *_ambiguous.*
          Created expected result files in the directory
          tests/expected_results/
          These are now used for the unit test tests/taggd_demultiplex_test.py
0.2.4   - Removing the unittest for the expected results of outfile_results.tsv
          The test will be reintroduced in some future release.
0.2.5   - Fixed homopolymer-filter=0 bug, readded c files to git.
0.2.6   - Added Travis, readded unittest for the expected results of
          outfile_results.tsv for each format.
0.2.7   - Added ambiguity range option.
0.2.8   - Improved help messages.
0.2.9   - Changed ambiguity range to factor.
0.3.0   - Formatted code and added option to include one match when there are
          multiple hits. Speed improvements and small refactoring.
0.3.1   - Added option to trim sequences in the barcodes
0.3.2   - Added option to enable demultiplexing of BAM or SAM formatted input
          files using a barcode sequence from a tag field.
0.3.3   - Buf fixes relatesd to BAM input.
0.3.5   - Python 3 support
0.4.0   - Refactor the whole codebase
        - Add --chunk-size argument
        - Use Google docstrings and typing hints
        - Add github actions and pre-commit hooks
        - Update the building scripts and the documentation
        - Add test for full coverage
        - Update all dependencies and add support to modern Python
